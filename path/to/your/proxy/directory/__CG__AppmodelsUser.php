<?php

namespace DoctrineProxies\__CG__\App\models;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\models\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\models\\User' . "\0" . 'userId', '' . "\0" . 'App\\models\\User' . "\0" . 'userName', '' . "\0" . 'App\\models\\User' . "\0" . 'birthDate', '' . "\0" . 'App\\models\\User' . "\0" . 'phoneNo', '' . "\0" . 'App\\models\\User' . "\0" . 'password', '' . "\0" . 'App\\models\\User' . "\0" . 'email', '' . "\0" . 'App\\models\\User' . "\0" . 'profileImg', '' . "\0" . 'App\\models\\User' . "\0" . 'coins', '' . "\0" . 'App\\models\\User' . "\0" . 'gender'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\models\\User' . "\0" . 'userId', '' . "\0" . 'App\\models\\User' . "\0" . 'userName', '' . "\0" . 'App\\models\\User' . "\0" . 'birthDate', '' . "\0" . 'App\\models\\User' . "\0" . 'phoneNo', '' . "\0" . 'App\\models\\User' . "\0" . 'password', '' . "\0" . 'App\\models\\User' . "\0" . 'email', '' . "\0" . 'App\\models\\User' . "\0" . 'profileImg', '' . "\0" . 'App\\models\\User' . "\0" . 'coins', '' . "\0" . 'App\\models\\User' . "\0" . 'gender'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getUserId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getUserId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', []);

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', []);

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserName(string $userName): \App\models\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserName', [$userName]);

        return parent::setUserName($userName);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthDate(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthDate', []);

        return parent::getBirthDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthDate(string $birthDate): \App\models\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthDate', [$birthDate]);

        return parent::setBirthDate($birthDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoneNo(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoneNo', []);

        return parent::getPhoneNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoneNo(string $phoneNo): \App\models\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoneNo', [$phoneNo]);

        return parent::setPhoneNo($phoneNo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\models\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\models\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfileImg(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfileImg', []);

        return parent::getProfileImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfileImg(?string $profileImg): \App\models\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfileImg', [$profileImg]);

        return parent::setProfileImg($profileImg);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoins(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoins', []);

        return parent::getCoins();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoins(int $coins): \App\models\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoins', [$coins]);

        return parent::setCoins($coins);
    }

    /**
     * {@inheritDoc}
     */
    public function getGender(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', []);

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function setGender(string $gender): \App\models\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', [$gender]);

        return parent::setGender($gender);
    }

}
